#include<iostream>
#include<vector>
struct Vertex
{
	float x, y, z;
	Vertex(float X, float Y, float Z) :x(X), y(Y), z(Z) 
	{

	}

	Vertex(const Vertex& other) :x(other.x), y(other.y), z(other.z) 
	{
		std::cout << "copy!!" << std::endl;
	}

};

//std::ostream& operator<<(std::ostream& stream, const Vertex& vertex)
//{
//	stream << vertex.x << "," << vertex.y << "," << vertex.z << std::endl;
//	return stream;
//}

//static void function(const std::vector<Vertex>& vertices)
//{
//	for (const Vertex& v : vertices)
//	{
//		std::cout << v << std::endl;
//	}
//}

int main()
{
	std::vector<Vertex>vertices;
	vertices.reserve(3);
	vertices.emplace_back(1,2,3);
	vertices.emplace_back(4,5,6);
	vertices.emplace_back(7,8,9);

	//function(vertices);


	std::cin.get();
}
